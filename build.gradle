plugins {
	id 'org.springframework.boot' version '2.5.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.netflix.dgs.codegen' version '5.0.4'
}

group = 'com.iot.platform'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

apply plugin: 'application'
mainClassName = 'com.iot.platform.devicemanager.DeviceManagerApplication'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2020.0.3")
}

dependencies {
	implementation(platform("com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:latest.release"))
	implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter'
	implementation 'com.netflix.graphql.dgs:graphql-dgs-extended-scalars'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-joda'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testRuntimeOnly 'com.h2database:h2'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}

generateJava {
	//schemaPaths = ["${projectDir}/src/main/resources/schema"] // List of directories containing schema files
	packageName = 'com.example.packagename' // The package name to use to generate sources
	generateClient = true // Enable generating the type safe query API
	typeMapping = [
			"BigInteger" : "java.math.BigInteger",
			"BigDecimal": "java.math.BigDecimal"
	]
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
			srcDir 'target/generated-sources/annotations'
		}
	}
}